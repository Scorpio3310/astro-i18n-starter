---
export const prerender = false;

// Imports
import { useTranslations } from "@i18n/utils";
import Base from "@layouts/Base.astro";
import Info from "@/components/Info.astro";

// Get current language from URL path
// With prerender: false (SSR mode), we access params directly from Astro.params instead of getStaticPaths()
// The [...contact] rest parameter captures the entire path after the base URL:
// English route: /contact → contact = "contact"
// Slovenian route: /sl/kontakt → contact = "sl/contact"
const contactPath = Astro.params.contact || "";

// Validate allowed paths - show 404 for invalid routes
// Using Astro.rewrite() instead of redirect() to preserve the original URL in browser
// This provides better UX by showing 404 content at /contact123 instead of redirecting to /404
const validPaths = ["contact", "sl/contact"];
if (!validPaths.includes(contactPath)) {
    return Astro.rewrite("/404");
}

// Determine language from path structure
// Slovenian URLs start with "sl/" prefix, English URLs have no language prefix
const lang = contactPath.startsWith("sl/") ? "sl" : "en";

// Translations
const t = useTranslations(lang);

// Handle form submission on POST request
if (Astro.request.method === "POST") {
    try {
        // Extract form data from request
        const data = await Astro.request.formData();
        const name = data.get("name");
        const email = data.get("email");
        const message = data.get("message");

        // Log form submission (replace with actual form handling logic)
        console.log("Contact Form Submission: ", { name, email, message });
    } catch (error) {
        // Handle form processing errors
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}
---

<Base
    title={t("contact:head.title")}
    meta={{
        description: t("contact:head.description"),
        keywords: t("contact:head.keywords"),
    }}
>
    <section aria-labelledby="contact-title">
        <h1 id="contact-title">{t("contact:title")}</h1>
        <Info lang={lang} message={t("contact:server")} />
        <Info lang={lang} message={t("contact:unlocalized")} />
        <form
            name="Contact Form"
            method="POST"
            role="form"
            aria-labelledby="form-heading"
            novalidate
        >
            <div role="group" aria-labelledby="form-heading">
                <h2 id="form-heading">{t("contact:subtitle")}</h2>
                <p>{t("contact:description")}</p>
            </div>

            <div class="form-field">
                <label for="name" class="required">
                    {t("contact:form.name")}
                    <abbr title="required" aria-label="required">*</abbr>
                </label>
                <input
                    required
                    type="text"
                    id="name"
                    name="name"
                    placeholder={t("contact:form.placeholder.name")}
                    aria-describedby="name-error"
                    autocomplete="name"
                />
                <div
                    id="name-error"
                    class="error-message"
                    role="alert"
                    aria-live="polite"
                >
                </div>
            </div>

            <div class="form-field">
                <label for="email" class="required">
                    {t("contact:form.email")}
                    <abbr title="required" aria-label="required">*</abbr>
                </label>
                <input
                    required
                    type="email"
                    id="email"
                    name="email"
                    placeholder={t("contact:form.placeholder.email")}
                    aria-describedby="email-error"
                    autocomplete="email"
                />
                <div
                    id="email-error"
                    class="error-message"
                    role="alert"
                    aria-live="polite"
                >
                </div>
            </div>

            <div class="form-field">
                <label for="message" class="required">
                    {t("contact:form.message")}
                    <abbr title="required" aria-label="required">*</abbr>
                </label>
                <textarea
                    required
                    name="message"
                    id="message"
                    placeholder={t("contact:form.placeholder.message")}
                    rows="4"
                    aria-describedby="message-error"
                    autocomplete="off"></textarea>
                <div
                    id="message-error"
                    class="error-message"
                    role="alert"
                    aria-live="polite"
                >
                </div>
            </div>

            <button type="submit" aria-describedby="submit-status">
                {t("contact:form.submit")}
            </button>
            <div
                id="submit-status"
                class="sr-only"
                role="status"
                aria-live="polite"
            >
            </div>
        </form>
    </section>
</Base>

<style>
    @import "tailwindcss";

    @theme {
        --color-primary: #6c24d8;
    }

    form {
        @apply space-y-4 max-w-4xl mx-auto pt-8;
    }

    form > div:first-child {
        @apply mb-6;
    }

    form > div {
        @apply space-y-1;
    }

    label {
        @apply block text-sm font-medium mb-1;
    }

    input,
    textarea {
        @apply w-full px-3 py-2 border border-gray-300;
    }

    button {
        @apply bg-primary text-white px-5 py-2.5 hover:opacity-50 cursor-pointer;
    }
</style>
