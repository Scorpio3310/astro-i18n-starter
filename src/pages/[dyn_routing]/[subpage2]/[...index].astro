---
//Imports
import { useTranslations, buildLocalizedStaticPaths } from "@i18n/utils";
import Base from "@layouts/Base.astro";
import "@styles/markdown.css";
import Counter from "@components/Counter.svelte";

// Get current language from URL
// Localize Dynamic Routing → Subpage 2 (nested) across all languages.
// Pattern: ["dyn_routing", "subpage2", "...index"] → fills [dyn_routing], [subpage2], and the remaining segments into [...index].
export function getStaticPaths() {
    // Map translated "/dynamic-routing/subpage-2" to params of [dyn_routing]/[subpage2]/[...index].astro
    return buildLocalizedStaticPaths("/dynamic-routing/subpage-2", [
        "dyn_routing",
        "subpage2",
        "...index",
    ]);
}

// Props
const { lang } = Astro.props;

// Translations
const t = useTranslations(lang);
---

<Base
    title={t("routing:subpages.subpage-2.title")}
    meta={{
        description: t("routing:subpages.subpage-2.description"),
        keywords: t("routing:subpages.subpage-2.keywords"),
    }}
>
    <section id="md-content">
        <h1>{t("routing:subpages.subpage-2.title")}</h1>
        <p set:html={t("routing:subpages.subpage-2.description")} />

        <pre
            class="astro-code github-dark"
            style="background-color:#24292e;color:#e1e4e8;overflow-x:auto"
            tabindex="0"
            data-language="plaintext"><code>{`// Get current language from URL
// Localize Dynamic Routing → Subpage 2 (nested) across all languages.
// Pattern: ["dyn_routing", "subpage2", "...index"] → fills [dyn_routing], [subpage2], and the remaining segments into [...index].
export function getStaticPaths() {
    // Map translated "/dynamic-routing/subpage-2" to params of [dyn_routing]/[subpage2]/[...index].astro
    return buildLocalizedStaticPaths("/dynamic-routing/subpage-2", [
        "dyn_routing",
        "subpage2",
        "...index",
    ]);
}`}</code></pre>
    </section>
    <section aria-label={t("component:title")} id="md-content">
        <h2>{t("component:title")}</h2>
        <p set:html={t("component:description")} />
        <Counter
            client:load
            translations={{
                title: t("component:framework", { framework: "Svelte" }),
                body: t("component:body"),
            }}
        />
    </section>
</Base>
